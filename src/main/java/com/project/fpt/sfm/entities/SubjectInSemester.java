package com.project.fpt.sfm.entities;
// Generated Oct 12, 2015 2:10:19 AM by Hibernate Tools 4.3.1


import org.hibernate.annotations.Cascade;
import org.hibernate.annotations.CascadeType;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * SubjectInSemester generated by hbm2java
 */
@Entity
@Table(name="subject_in_semester"
    ,catalog="sfm"
)
public class SubjectInSemester  implements java.io.Serializable {


     private Integer subInSemId;
     private Semester semester;
     private Subject subject;
     private int numberOfCredit;
     private int half;
     private Date startDate;
     private Date endDate;
     private String note;
     private Boolean isActive;
     private Date dateCreated;
     private Date dateUpdated;
     private Set<RetakeSubjectPayment> retakeSubjectPayments = new HashSet<RetakeSubjectPayment>(0);
     private Set<Course> courses = new HashSet<Course>(0);

    public SubjectInSemester() {
        this.dateCreated = new Date();
        this.dateUpdated = new Date();
        this.isActive = true;
        this.note = "-";
    }

	
    public SubjectInSemester(Semester semester, Subject subject, int numberOfCredit, int half) {
        this.semester = semester;
        this.subject = subject;
        this.numberOfCredit = numberOfCredit;
        this.half = half;
    }
    public SubjectInSemester(Semester semester, Subject subject, int numberOfCredit, int half, Date startDate, Date endDate, String note, Boolean isActive, Date dateCreated, Date dateUpdated, Set<RetakeSubjectPayment> retakeSubjectPayments, Set<Course> courses) {
       this.semester = semester;
       this.subject = subject;
       this.numberOfCredit = numberOfCredit;
       this.half = half;
       this.startDate = startDate;
       this.endDate = endDate;
       this.note = note;
       this.isActive = isActive;
       this.dateCreated = dateCreated;
       this.dateUpdated = dateUpdated;
       this.retakeSubjectPayments = retakeSubjectPayments;
       this.courses = courses;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="SubInSemID", unique=true, nullable=false)
    public Integer getSubInSemId() {
        return this.subInSemId;
    }
    
    public void setSubInSemId(Integer subInSemId) {
        this.subInSemId = subInSemId;
    }

@ManyToOne(fetch=FetchType.LAZY)
@Cascade(CascadeType.ALL)
    @JoinColumn(name="SemesterID", nullable=false)
    public Semester getSemester() {
        return this.semester;
    }
    
    public void setSemester(Semester semester) {
        this.semester = semester;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="SubjectID", nullable=false)
    public Subject getSubject() {
        return this.subject;
    }
    
    public void setSubject(Subject subject) {
        this.subject = subject;
    }

    
    @Column(name="NumberOfCredit", nullable=false)
    public int getNumberOfCredit() {
        return this.numberOfCredit;
    }
    
    public void setNumberOfCredit(int numberOfCredit) {
        this.numberOfCredit = numberOfCredit;
    }

    
    @Column(name="Half", nullable=false)
    public int getHalf() {
        return this.half;
    }
    
    public void setHalf(int half) {
        this.half = half;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="StartDate", length=19)
    public Date getStartDate() {
        return this.startDate;
    }
    
    public void setStartDate(Date startDate) {
        this.startDate = startDate;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="EndDate", length=19)
    public Date getEndDate() {
        return this.endDate;
    }
    
    public void setEndDate(Date endDate) {
        this.endDate = endDate;
    }

    
    @Column(name="Note", length=65535)
    public String getNote() {
        return this.note;
    }
    
    public void setNote(String note) {
        this.note = note;
    }

    
    @Column(name="IsActive")
    public Boolean getIsActive() {
        return this.isActive;
    }
    
    public void setIsActive(Boolean isActive) {
        this.isActive = isActive;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="Date_Created", length=19)
    public Date getDateCreated() {
        return this.dateCreated;
    }
    
    public void setDateCreated(Date dateCreated) {
        this.dateCreated = dateCreated;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="DateUpdated", length=19)
    public Date getDateUpdated() {
        return this.dateUpdated;
    }
    
    public void setDateUpdated(Date dateUpdated) {
        this.dateUpdated = dateUpdated;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="subjectInSemester")
    public Set<RetakeSubjectPayment> getRetakeSubjectPayments() {
        return this.retakeSubjectPayments;
    }
    
    public void setRetakeSubjectPayments(Set<RetakeSubjectPayment> retakeSubjectPayments) {
        this.retakeSubjectPayments = retakeSubjectPayments;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="subjectInSemester")
    public Set<Course> getCourses() {
        return this.courses;
    }
    
    public void setCourses(Set<Course> courses) {
        this.courses = courses;
    }




}


