package com.project.fpt.sfm.entities;
// Generated Oct 12, 2015 2:10:19 AM by Hibernate Tools 4.3.1


import org.hibernate.annotations.Cascade;
import org.hibernate.annotations.CascadeType;

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Course generated by hbm2java
 */
@Entity
@Table(name="course"
    ,catalog="sfm"
)
public class Course  implements java.io.Serializable {


     private Integer courseId;
     private Clazz clazz;
     private Student student;
     private SubjectInSemester subjectInSemester;
     private float mark;
     private boolean isPass;
     private boolean isRetake;
     private String note;
     private Boolean isActive;
     private Date dateCreated;
     private Date dateUpdated;

    public Course() {
        this.dateCreated = new Date();
        this.dateUpdated = new Date();
        this.isActive = true;
        this.note = "-";
    }

	
    public Course(Clazz clazz, Student student, SubjectInSemester subjectInSemester, float mark, boolean isPass, boolean isRetake) {
        this.clazz = clazz;
        this.student = student;
        this.subjectInSemester = subjectInSemester;
        this.mark = mark;
        this.isPass = isPass;
        this.isRetake = isRetake;
    }
    public Course(Clazz clazz, Student student, SubjectInSemester subjectInSemester, float mark, boolean isPass, boolean isRetake, String note, Boolean isActive, Date dateCreated, Date dateUpdated) {
       this.clazz = clazz;
       this.student = student;
       this.subjectInSemester = subjectInSemester;
       this.mark = mark;
       this.isPass = isPass;
       this.isRetake = isRetake;
       this.note = note;
       this.isActive = isActive;
       this.dateCreated = dateCreated;
       this.dateUpdated = dateUpdated;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="CourseID", unique=true, nullable=false)
    public Integer getCourseId() {
        return this.courseId;
    }
    
    public void setCourseId(Integer courseId) {
        this.courseId = courseId;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="ClassID", nullable=false)
    public Clazz getClazz() {
        return this.clazz;
    }
    
    public void setClazz(Clazz clazz) {
        this.clazz = clazz;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="StudentID", nullable=false)
    public Student getStudent() {
        return this.student;
    }
    
    public void setStudent(Student student) {
        this.student = student;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="SubInSemID", nullable=false)
    public SubjectInSemester getSubjectInSemester() {
        return this.subjectInSemester;
    }
    
    public void setSubjectInSemester(SubjectInSemester subjectInSemester) {
        this.subjectInSemester = subjectInSemester;
    }

    
    @Column(name="Mark", nullable=false, precision=12, scale=0)
    public float getMark() {
        return this.mark;
    }
    
    public void setMark(float mark) {
        this.mark = mark;
    }

    
    @Column(name="IsPass", nullable=false)
    public boolean isIsPass() {
        return this.isPass;
    }
    
    public void setIsPass(boolean isPass) {
        this.isPass = isPass;
    }

    
    @Column(name="IsRetake", nullable=false)
    public boolean isIsRetake() {
        return this.isRetake;
    }
    
    public void setIsRetake(boolean isRetake) {
        this.isRetake = isRetake;
    }

    
    @Column(name="Note", length=65535)
    public String getNote() {
        return this.note;
    }
    
    public void setNote(String note) {
        this.note = note;
    }

    
    @Column(name="IsActive")
    public Boolean getIsActive() {
        return this.isActive;
    }
    
    public void setIsActive(Boolean isActive) {
        this.isActive = isActive;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="Date_Created", length=19)
    public Date getDateCreated() {
        return this.dateCreated;
    }
    
    public void setDateCreated(Date dateCreated) {
        this.dateCreated = dateCreated;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="DateUpdated", length=19)
    public Date getDateUpdated() {
        return this.dateUpdated;
    }
    
    public void setDateUpdated(Date dateUpdated) {
        this.dateUpdated = dateUpdated;
    }


    @Override
    public String toString() {
        final StringBuffer sb = new StringBuffer("Course{");
        sb.append("clazz=").append(clazz.getClassName());
        sb.append(", student=").append(student.getFullName());
        sb.append(", mark=").append(mark);
        sb.append(", isPass=").append(isPass);
        sb.append(", isRetake=").append(isRetake);
        sb.append(", note='").append(note).append('\'');
        sb.append(", isActive=").append(isActive);
        sb.append(", subjectInSemester=").append(subjectInSemester.getSubject().getSubjectNameE());
        sb.append('}');
        return sb.toString();
    }
}


