package com.project.fpt.sfm.entities;
// Generated Oct 12, 2015 4:18:54 PM by Hibernate Tools 4.3.1


import org.hibernate.annotations.Cascade;
import org.hibernate.annotations.CascadeType;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Semester generated by hbm2java
 */
@Entity
@Table(name="semester"
    ,catalog="sfm"
)
public class Semester  implements java.io.Serializable {


     private Integer semesterId;
     private Major major;
     private StudyStage studyStage;
     private Term term;
     private int stageTuitionUsd;
     private String note;
     private boolean isActive;
     private Date dateCreated;
     private Date dateUpdated;
     private Set<TuitionPayment> tuitionPayments = new HashSet<TuitionPayment>(0);
     private Set<SubjectInSemester> subjectInSemesters = new HashSet<SubjectInSemester>(0);

    public Semester() {
    }

	
    public Semester(Major major, StudyStage studyStage, Term term, int stageTuitionUsd, boolean isActive) {
        this.major = major;
        this.studyStage = studyStage;
        this.term = term;
        this.stageTuitionUsd = stageTuitionUsd;
        this.isActive = isActive;
    }
    public Semester(Major major, StudyStage studyStage, Term term, int stageTuitionUsd, String note, boolean isActive, Date dateCreated, Date dateUpdated, Set<TuitionPayment> tuitionPayments, Set<SubjectInSemester> subjectInSemesters) {
       this.major = major;
       this.studyStage = studyStage;
       this.term = term;
       this.stageTuitionUsd = stageTuitionUsd;
       this.note = note;
       this.isActive = isActive;
       this.dateCreated = dateCreated;
       this.dateUpdated = dateUpdated;
       this.tuitionPayments = tuitionPayments;
       this.subjectInSemesters = subjectInSemesters;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="SemesterID", unique=true, nullable=false)
    public Integer getSemesterId() {
        return this.semesterId;
    }
    
    public void setSemesterId(Integer semesterId) {
        this.semesterId = semesterId;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="MajorID", nullable=false)
    public Major getMajor() {
        return this.major;
    }
    
    public void setMajor(Major major) {
        this.major = major;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="StudyStageID", nullable=false)
    public StudyStage getStudyStage() {
        return this.studyStage;
    }
    
    public void setStudyStage(StudyStage studyStage) {
        this.studyStage = studyStage;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="TermID", nullable=false)
    public Term getTerm() {
        return this.term;
    }
    
    public void setTerm(Term term) {
        this.term = term;
    }

    
    @Column(name="StageTuitionUSD", nullable=false)
    public int getStageTuitionUsd() {
        return this.stageTuitionUsd;
    }
    
    public void setStageTuitionUsd(int stageTuitionUsd) {
        this.stageTuitionUsd = stageTuitionUsd;
    }

    
    @Column(name="Note", length=65535)
    public String getNote() {
        return this.note;
    }
    
    public void setNote(String note) {
        this.note = note;
    }

    
    @Column(name="IsActive", nullable=false)
    public boolean isIsActive() {
        return this.isActive;
    }
    
    public void setIsActive(boolean isActive) {
        this.isActive = isActive;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="DateCreated", length=19)
    public Date getDateCreated() {
        return this.dateCreated;
    }
    
    public void setDateCreated(Date dateCreated) {
        this.dateCreated = dateCreated;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="DateUpdated", length=19)
    public Date getDateUpdated() {
        return this.dateUpdated;
    }
    
    public void setDateUpdated(Date dateUpdated) {
        this.dateUpdated = dateUpdated;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="semester")
    public Set<TuitionPayment> getTuitionPayments() {
        return this.tuitionPayments;
    }
    
    public void setTuitionPayments(Set<TuitionPayment> tuitionPayments) {
        this.tuitionPayments = tuitionPayments;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="semester")
    public Set<SubjectInSemester> getSubjectInSemesters() {
        return this.subjectInSemesters;
    }
    
    public void setSubjectInSemesters(Set<SubjectInSemester> subjectInSemesters) {
        this.subjectInSemesters = subjectInSemesters;
    }




}


